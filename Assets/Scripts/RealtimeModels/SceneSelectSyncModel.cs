//using System.Collections;
//using System.Collections.Generic;
//using Assets.Scripts.Enums;
//using UnityEngine;
//using Normal.Realtime.Serialization;
//using Normal.Realtime;

//[RealtimeModel]
//public partial class SceneSelectSyncModel
//{
//    [RealtimeProperty(1, true, true)] private Scene _scene;
//}

/* ----- Begin Normal Autogenerated Code ----- */
//public partial class SceneSelectSyncModel : RealtimeModel {
//    public Assets.Scripts.Enums.Scene scene {
//        get {
//            return _cache.LookForValueInCache(_scene, entry => entry.sceneSet, entry => entry.scene);
//        }
//        set {
//            if (this.scene == value) return;
//            _cache.UpdateLocalCache(entry => { entry.sceneSet = true; entry.scene = value; return entry; });
//            InvalidateReliableLength();
//            FireSceneDidChange(value);
//        }
//    }
    
//    public delegate void PropertyChangedHandler<in T>(SceneSelectSyncModel model, T value);
//    public event PropertyChangedHandler<Assets.Scripts.Enums.Scene> sceneDidChange;
    
//    private struct LocalCacheEntry {
//        public bool sceneSet;
//        public Assets.Scripts.Enums.Scene scene;
//    }
    
//    private LocalChangeCache<LocalCacheEntry> _cache = new LocalChangeCache<LocalCacheEntry>();
    
//    public enum PropertyID : uint {
//        Scene = 1,
//    }
    
//    public SceneSelectSyncModel() : this(null) {
//    }
    
//    public SceneSelectSyncModel(RealtimeModel parent) : base(null, parent) {
//    }
    
//    protected override void OnParentReplaced(RealtimeModel previousParent, RealtimeModel currentParent) {
//        UnsubscribeClearCacheCallback();
//    }
    
//    private void FireSceneDidChange(Assets.Scripts.Enums.Scene value) {
//        try {
//            sceneDidChange?.Invoke(this, value);
//        } catch (System.Exception exception) {
//            UnityEngine.Debug.LogException(exception);
//        }
//    }
    
//    protected override int WriteLength(StreamContext context) {
//        int length = 0;
//        if (context.fullModel) {
//            FlattenCache();
//            length += WriteStream.WriteVarint32Length((uint)PropertyID.Scene, (uint) _scene);
//        } else if (context.reliableChannel) {
//            LocalCacheEntry entry = _cache.localCache;
//            if (entry.sceneSet) {
//                length += WriteStream.WriteVarint32Length((uint)PropertyID.Scene, (uint) entry.scene);
//            }
//        }
//        return length;
//    }
    
//    protected override void Write(WriteStream stream, StreamContext context) {
//        var didWriteProperties = false;
        
//        if (context.fullModel) {
//            stream.WriteVarint32((uint)PropertyID.Scene, (uint) _scene);
//        } else if (context.reliableChannel) {
//            LocalCacheEntry entry = _cache.localCache;
//            if (entry.sceneSet) {
//                _cache.PushLocalCacheToInflight(context.updateID);
//                ClearCacheOnStreamCallback(context);
//            }
//            if (entry.sceneSet) {
//                stream.WriteVarint32((uint)PropertyID.Scene, (uint) entry.scene);
//                didWriteProperties = true;
//            }
            
//            if (didWriteProperties) InvalidateReliableLength();
//        }
//    }
    
//    protected override void Read(ReadStream stream, StreamContext context) {
//        while (stream.ReadNextPropertyID(out uint propertyID)) {
//            switch (propertyID) {
//                case (uint)PropertyID.Scene: {
//                    Assets.Scripts.Enums.Scene previousValue = _scene;
//                    _scene = (Assets.Scripts.Enums.Scene) stream.ReadVarint32();
//                    bool sceneExistsInChangeCache = _cache.ValueExistsInCache(entry => entry.sceneSet);
//                    if (!sceneExistsInChangeCache && _scene != previousValue) {
//                        FireSceneDidChange(_scene);
//                    }
//                    break;
//                }
//                default: {
//                    stream.SkipProperty();
//                    break;
//                }
//            }
//        }
//    }
    
//    #region Cache Operations
    
//    private StreamEventDispatcher _streamEventDispatcher;
    
//    private void FlattenCache() {
//        _scene = scene;
//        _cache.Clear();
//    }
    
//    private void ClearCache(uint updateID) {
//        _cache.RemoveUpdateFromInflight(updateID);
//    }
    
//    private void ClearCacheOnStreamCallback(StreamContext context) {
//        if (_streamEventDispatcher != context.dispatcher) {
//            UnsubscribeClearCacheCallback(); // unsub from previous dispatcher
//        }
//        _streamEventDispatcher = context.dispatcher;
//        _streamEventDispatcher.AddStreamCallback(context.updateID, ClearCache);
//    }
    
//    private void UnsubscribeClearCacheCallback() {
//        if (_streamEventDispatcher != null) {
//            _streamEventDispatcher.RemoveStreamCallback(ClearCache);
//            _streamEventDispatcher = null;
//        }
//    }
    
//    #endregion
//}
/* ----- End Normal Autogenerated Code ----- */
